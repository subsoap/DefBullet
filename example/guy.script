local rendercam = require("rendercam.rendercam")


local function rotate_2d_vector(vector, theta)
	local theta_sin = math.sin(theta)
	local theta_cos = math.cos(theta)
	return vector.x * theta_cos - vector.y * theta_sin, vector.x * theta_sin + vector.y * theta_cos
end

function init(self)
	msg.post(".", "acquire_input_focus")
	self.target = vmath.vector3()
	self.direction = vmath.vector3(1,0,0)
	self.position = go.get_position()
	self.movement = vmath.vector3(1,1,0)
	self.speed = 10
	self.moving = false
	self.shooting_counter = 0
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	go.set_rotation(vmath.quat_rotation_z(math.atan2(self.direction.y, self.direction.x)))
	if self.moving == true then
		self.movement = vmath.normalize(self.movement)
		self.position = self.position + self.movement * self.speed
		go.set_position(self.position)
	end

	if self.shooting == true and self.shooting_counter == 0 then
		local temp_direction = vmath.vector3()
		temp_direction.x, temp_direction.y = rotate_2d_vector(self.direction, (math.random(1,1000)-500) * 0.00025)
		factory.create("/bullet_factory#factory", self.position, self.rotation, {direction = temp_direction, speed = 250 + math.random(100), position = self.position, life = 2})

		self.shooting_counter = 0.15
	end
	
	if self.shooting_counter > 0 then 
		self.shooting_counter = self.shooting_counter - dt
	else
		self.shooting_counter = 0
	end
	
	self.moving = false
	self.shooting = false
	
end

function on_message(self, message_id, message, sender)

end

function on_input(self, action_id, action)
	if action_id == hash("touch") then
		self.shooting = true
	end
	
	if action.screen_x ~= nil then
		self.target = rendercam.screen_to_world_2d(action.screen_x, action.screen_y)
		self.direction = vmath.normalize(self.target - self.position)
	end

	if action_id == hash("key_w") then
		self.movement = self.movement + vmath.vector3(0,1,0)
		self.moving = true
	end
	if action_id == hash("key_a") then
		self.movement = self.movement + vmath.vector3(-1,0,0)
		self.moving = true
	end
	if action_id == hash("key_s") then
		self.movement = self.movement + vmath.vector3(0,-1,0)
		self.moving = true
	end
	if action_id == hash("key_d") then
		self.movement = self.movement + vmath.vector3(1,0,0)
		self.moving = true
	end
	
	
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
